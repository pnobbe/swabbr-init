apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.4"
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

task jacocoTestReport(type: JacocoReport, dependsOn: []) {
    //Define which type of report you want to generate
    reports {
        csv.enabled false
        xml.enabled false
    }

    //Define which classes to exclude
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
            '**/*Module.*', // Modules for Dagger.
            '**/*Dagger*.*', // Dagger auto-generated code.
            '**/*MembersInjector*.*', // Dagger auto-generated code.
            '**/*_Provide*Factory*.*',
            '**/*_Factory.*', //Dagger auto-generated code
            '**/*$*$*.*', // Anonymous classes generated by kotlin
            //add libraries
            'android/**/*.*',
            'com/**/*.*',
            'uk/**/*.*',
            'io/**/*.*',
            //remove what we don't test
            'androidTest/**/*.*',
            'test/**/*.*',
            '**/injector/**/*.*',
            '**/model/**/*.*',
            '**/mock/**/*.*',
            '**/event/**/*.*',
            '**/**_ViewBinding**',
            '**/*EventType.*',
            '**/**Mocked'
    ]

    //Define your source and your classes: we want to test the production code
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    //Explain to Jacoco the source code is
    sourceDirectories.from = files([mainSrc])

    //Explain to Jacoco the class files are
    classDirectories.from = files([debugTree])

    //As you want to gather all your tests reports, add the ec and exec you want to take into
    //account when generating the report
    executionData.from = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}